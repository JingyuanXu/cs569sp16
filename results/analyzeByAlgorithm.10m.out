P-VALUE CUTOFF = 0.01
MEAN BRANCH COVERGE OVER 5 RUNS
#1: alizades_mutatenewcover BRANCHES MEAN 14271.6 SD 2175.44 / 20932 TOTAL BRANCHES (#1) 5 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh_BFSmutation (#22) p-value = 0.00902343881808
#2: SWARM BRANCHES MEAN 14138.8 SD 1797.81 / 18612 TOTAL BRANCHES (#9) 5 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN xujing_feedback (#23) p-value = 0.00902343881808
#3: pengxin_coverTesterOnlyNew BRANCHES MEAN 13701.8 SD 2032.45 / 19286 TOTAL BRANCHES (#6) 5 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN xujing_feedback (#23) p-value = 0.00902343881808
#4: zhangh7_MRTBFS BRANCHES MEAN 13555.6 SD 1105.92 / 18502 TOTAL BRANCHES (#11) 5 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh_BFSmutation (#22) p-value = 0.00902343881808
#5: wutso_coverTesterBalanceActs BRANCHES MEAN 13540.0 SD 1904.55 / 18224 TOTAL BRANCHES (#12) 5 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN xujing_feedback (#23) p-value = 0.00902343881808
#6: tangz_ARTpartition BRANCHES MEAN 13435.4 SD 1844.62 / 18551 TOTAL BRANCHES (#10) 5 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN xujing_feedback (#23) p-value = 0.00902343881808
#7: zhengxu_poolBased BRANCHES MEAN 13202.0 SD 4002.12 / 20301 TOTAL BRANCHES (#2) 5 EXPERIMENTS
#8: zhouxuh_feedback BRANCHES MEAN 12987.8 SD 4629.87 / 19758 TOTAL BRANCHES (#5) 5 EXPERIMENTS
#9: zhaozixu_feedback BRANCHES MEAN 12983.2 SD 1711.87 / 17707 TOTAL BRANCHES (#14) 5 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN xujing_feedback (#23) p-value = 0.00902343881808
#10: nelsonni_genetic BRANCHES MEAN 12612.6 SD 2418.4 / 18195 TOTAL BRANCHES (#13) 5 EXPERIMENTS
#11: PURERANDOM BRANCHES MEAN 12590.2 SD 3961.63 / 20147 TOTAL BRANCHES (#3) 5 EXPERIMENTS
#12: COVERTESTER BRANCHES MEAN 12293.6 SD 2654.08 / 19245 TOTAL BRANCHES (#7) 5 EXPERIMENTS
#13: alghamha_PROP BRANCHES MEAN 11975.8 SD 1961.68 / 16501 TOTAL BRANCHES (#17) 5 EXPERIMENTS
#14: hoangmin_genetic BRANCHES MEAN 11785.6 SD 4388.43 / 20067 TOTAL BRANCHES (#4) 5 EXPERIMENTS
#15: chenk4_2phaseBFS BRANCHES MEAN 11679.0 SD 4192.92 / 18930 TOTAL BRANCHES (#8) 5 EXPERIMENTS
#16: zhouzh_genetic BRANCHES MEAN 11345.4 SD 2893.83 / 16716 TOTAL BRANCHES (#16) 5 EXPERIMENTS
#17: rayalas_avoidKnownBugs BRANCHES MEAN 11231.8 SD 3996.71 / 16722 TOTAL BRANCHES (#15) 5 EXPERIMENTS
#18: kaneokak_feedback BRANCHES MEAN 11053.4 SD 2752.93 / 16292 TOTAL BRANCHES (#19) 5 EXPERIMENTS
#19: hexu_genetic BRANCHES MEAN 10953.0 SD 2347.37 / 15641 TOTAL BRANCHES (#20) 5 EXPERIMENTS
#20: liuh2_oneShotBelowMeanPool BRANCHES MEAN 10534.8 SD 2722.12 / 16399 TOTAL BRANCHES (#18) 5 EXPERIMENTS
#21: panju_sparseBFS BRANCHES MEAN 10498.8 SD 1546.16 / 15025 TOTAL BRANCHES (#21) 5 EXPERIMENTS
#22: chenzeh_BFSmutation BRANCHES MEAN 10301.0 SD 1097.94 / 14009 TOTAL BRANCHES (#22) 5 EXPERIMENTS
#23: xujing_feedback BRANCHES MEAN 8919.2 SD 979.18 / 12298 TOTAL BRANCHES (#23) 5 EXPERIMENTS
**********************************************************************
==================================================
FAULT #1: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError(), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['tangz_ARTpartition']
==================================================
FAULT #2: (<type 'exceptions.TypeError'>, TypeError("'cos' object is not callable",), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['zhouxuh_feedback']
==================================================
FAULT #3: (<type 'exceptions.TypeError'>, TypeError('cannot create mpf from None',), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['tangz_ARTpartition']
==================================================
FAULT #4: (<type 'exceptions.RuntimeError'>, RuntimeError('maximum recursion depth exceeded while calling a Python object',), 
FOUND 3 TIMES
FOUND BY 3 STUDENTS ['SWARM', 'tangz_ARTpartition', 'pengxin_coverTesterOnlyNew']
==================================================
FAULT #5: (<type 'exceptions.TypeError'>, TypeError('Invalid NaN comparison',), 
FOUND 4 TIMES
FOUND BY 3 STUDENTS ['chenzeh_BFSmutation', 'wutso_coverTesterBalanceActs', 'pengxin_coverTesterOnlyNew']
==================================================
FAULT #6: (<type 'exceptions.ValueError'>, ValueError('gamma function pole',), 
FOUND 3 TIMES
FOUND BY 3 STUDENTS ['zhangh7_MRTBFS', 'alizades_mutatenewcover', 'zhaozixu_feedback']
==================================================
FAULT #7: (<type 'exceptions.TypeError'>, TypeError('Invalid comparison 
FOUND 18 TIMES
FOUND BY 4 STUDENTS ['SWARM', 'liuh2_oneShotBelowMeanPool', 'wutso_coverTesterBalanceActs', 'chenk4_2phaseBFS']
==================================================
FAULT #8: (<type 'exceptions.ValueError'>, ValueError('got complex zero with unknown accuracy',), 
FOUND 23 TIMES
FOUND BY 5 STUDENTS ['zhengxu_poolBased', 'PURERANDOM', 'zhaozixu_feedback', 'xujing_feedback', 'hoangmin_genetic']
==================================================
FAULT #9: (<class 'sympy.polys.polyerrors.NotAlgebraic'>, 
FOUND 6 TIMES
FOUND BY 5 STUDENTS ['zhangh7_MRTBFS', 'zhengxu_poolBased', 'zhouzh_genetic', 'zhouxuh_feedback', 'wutso_coverTesterBalanceActs']
==================================================
FAULT #10: (<type 'exceptions.TypeError'>, TypeError("'exp' object is not callable",), 
FOUND 10 TIMES
FOUND BY 5 STUDENTS ['hexu_genetic', 'zhangh7_MRTBFS', 'rayalas_avoidKnownBugs', 'pengxin_coverTesterOnlyNew', 'wutso_coverTesterBalanceActs']
==================================================
FAULT #11: (<type 'exceptions.AssertionError'>, AssertionError(), 
FOUND 14 TIMES
FOUND BY 9 STUDENTS ['nelsonni_genetic', 'tangz_ARTpartition', 'wutso_coverTesterBalanceActs', 'zhouxuh_feedback', 'zhouzh_genetic', 'pengxin_coverTesterOnlyNew', 'zhangh7_MRTBFS', 'alizades_mutatenewcover', 'alghamha_PROP']
==================================================
FAULT #12: (<type 'exceptions.TypeError'>, TypeError("'mpf' object is not iterable",), 
FOUND 12 TIMES
FOUND BY 10 STUDENTS ['nelsonni_genetic', 'SWARM', 'liuh2_oneShotBelowMeanPool', 'chenk4_2phaseBFS', 'PURERANDOM', 'zhouzh_genetic', 'COVERTESTER', 'zhengxu_poolBased', 'alghamha_PROP', 'hoangmin_genetic']
==================================================
FAULT #13: (<type 'exceptions.ValueError'>, ValueError('Invalid limits 
FOUND 18 TIMES
FOUND BY 11 STUDENTS ['wutso_coverTesterBalanceActs', 'SWARM', 'zhengxu_poolBased', 'zhouxuh_feedback', 'kaneokak_feedback', 'PURERANDOM', 'pengxin_coverTesterOnlyNew', 'COVERTESTER', 'zhangh7_MRTBFS', 'alizades_mutatenewcover', 'hoangmin_genetic']
==================================================
FAULT #14: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('integer division or modulo by zero',), 
FOUND 19 TIMES
FOUND BY 14 STUDENTS ['nelsonni_genetic', 'tangz_ARTpartition', 'wutso_coverTesterBalanceActs', 'SWARM', 'liuh2_oneShotBelowMeanPool', 'zhouxuh_feedback', 'zhouzh_genetic', 'kaneokak_feedback', 'PURERANDOM', 'COVERTESTER', 'zhengxu_poolBased', 'alizades_mutatenewcover', 'alghamha_PROP', 'hoangmin_genetic']
==================================================
FAULT #15: (<type 'exceptions.AttributeError'>, AttributeError("'NaN' object has no attribute '_mpf_'",), 
FOUND 22 TIMES
FOUND BY 18 STUDENTS ['nelsonni_genetic', 'chenzeh_BFSmutation', 'tangz_ARTpartition', 'wutso_coverTesterBalanceActs', 'liuh2_oneShotBelowMeanPool', 'zhengxu_poolBased', 'zhouxuh_feedback', 'chenk4_2phaseBFS', 'kaneokak_feedback', 'PURERANDOM', 'zhaozixu_feedback', 'zhouzh_genetic', 'pengxin_coverTesterOnlyNew', 'COVERTESTER', 'zhangh7_MRTBFS', 'xujing_feedback', 'alizades_mutatenewcover', 'hoangmin_genetic']
==================================================
FAULT #16: (<type 'exceptions.RuntimeError'>, RuntimeError('maximum recursion depth exceeded in cmp',), 
FOUND 404 TIMES
FOUND BY 23 STUDENTS ['zhouxuh_feedback', 'chenk4_2phaseBFS', 'kaneokak_feedback', 'SWARM', 'pengxin_coverTesterOnlyNew', 'zhangh7_MRTBFS', 'hoangmin_genetic', 'hexu_genetic', 'xujing_feedback', 'wutso_coverTesterBalanceActs', 'zhouzh_genetic', 'COVERTESTER', 'nelsonni_genetic', 'tangz_ARTpartition', 'PURERANDOM', 'zhaozixu_feedback', 'panju_sparseBFS', 'zhengxu_poolBased', 'alghamha_PROP', 'chenzeh_BFSmutation', 'liuh2_oneShotBelowMeanPool', 'rayalas_avoidKnownBugs', 'alizades_mutatenewcover']
**********************************************************************
#1: pengxin_coverTesterOnlyNew 7 FAULTS (#3) MEAN 3.0 SD 1.41 / 34 FAILURES (#7) MEAN 6.8 SD 5.67 #4:1 #5:1 #10:2 #11:2 #13:3 #15:3 #16:22 RUNS: 5
#2: zhouxuh_feedback 7 FAULTS (#2) MEAN 2.6 SD 1.74 / 40 FAILURES (#3) MEAN 8.0 SD 7.07 #2:1 #9:1 #11:1 #13:1 #14:2 #15:3 #16:31 RUNS: 5
#3: SWARM 6 FAULTS (#7) MEAN 2.6 SD 1.02 / 24 FAILURES (#11) MEAN 4.8 SD 2.14 #4:1 #7:2 #12:1 #13:4 #14:1 #16:15 RUNS: 5
#4: zhangh7_MRTBFS 7 FAULTS (#4) MEAN 2.6 SD 0.8 / 44 FAILURES (#2) MEAN 8.8 SD 4.07 #6:1 #9:2 #10:3 #11:1 #13:1 #15:1 #16:35 RUNS: 5
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh_BFSmutation (#22) p-value = 0.00902343881808
#5: wutso_coverTesterBalanceActs 9 FAULTS (#1) MEAN 2.6 SD 2.73 / 39 FAILURES (#4) MEAN 7.8 SD 6.73 #5:2 #7:1 #9:1 #10:2 #11:3 #13:1 #14:1 #15:1 #16:27 RUNS: 5
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh_BFSmutation (#22) p-value = 0.00902343881808
#6: tangz_ARTpartition 7 FAULTS (#5) MEAN 2.4 SD 0.49 / 30 FAILURES (#8) MEAN 6.0 SD 3.22 #1:1 #3:1 #4:1 #11:1 #14:2 #15:1 #16:23 RUNS: 5
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN panju_sparseBFS (#21) p-value = 0.00902343881808
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN hexu_genetic (#23) p-value = 0.00902343881808
#7: nelsonni_genetic 5 FAULTS (#13) MEAN 2.2 SD 1.17 / 22 FAILURES (#13) MEAN 4.4 SD 2.65 #11:1 #12:2 #14:2 #15:1 #16:16 RUNS: 5
#8: zhengxu_poolBased 7 FAULTS (#6) MEAN 2.2 SD 1.6 / 25 FAILURES (#10) MEAN 5.0 SD 5.06 #8:1 #9:1 #12:1 #13:1 #14:1 #15:1 #16:19 RUNS: 5
#9: alizades_mutatenewcover 6 FAULTS (#11) MEAN 2.2 SD 0.75 / 29 FAILURES (#9) MEAN 5.8 SD 5.64 #6:1 #11:3 #13:1 #14:2 #15:1 #16:21 RUNS: 5
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN hexu_genetic (#23) p-value = 0.00902343881808
#10: PURERANDOM 6 FAULTS (#10) MEAN 2.0 SD 1.26 / 24 FAILURES (#12) MEAN 4.8 SD 3.92 #8:1 #12:1 #13:1 #14:1 #15:1 #16:19 RUNS: 5
#11: hoangmin_genetic 6 FAULTS (#8) MEAN 1.8 SD 1.47 / 20 FAILURES (#16) MEAN 4.0 SD 4.1 #8:1 #12:1 #13:1 #14:1 #15:1 #16:15 RUNS: 5
#12: zhouzh_genetic 6 FAULTS (#9) MEAN 1.8 SD 1.17 / 17 FAILURES (#17) MEAN 3.4 SD 2.33 #9:1 #11:1 #12:1 #14:1 #15:1 #16:12 RUNS: 5
#13: kaneokak_feedback 4 FAULTS (#16) MEAN 1.6 SD 1.62 / 21 FAILURES (#15) MEAN 4.2 SD 5.6 #13:2 #14:2 #15:1 #16:16 RUNS: 5
#14: COVERTESTER 5 FAULTS (#12) MEAN 1.6 SD 1.2 / 14 FAILURES (#18) MEAN 2.8 SD 2.32 #12:1 #13:2 #14:1 #15:1 #16:9 RUNS: 5
#15: zhaozixu_feedback 4 FAULTS (#17) MEAN 1.6 SD 0.8 / 37 FAILURES (#5) MEAN 7.4 SD 7.12 #6:1 #8:19 #15:1 #16:16 RUNS: 5
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN hexu_genetic (#23) p-value = 0.00902343881808
#16: alghamha_PROP 4 FAULTS (#18) MEAN 1.6 SD 0.8 / 22 FAILURES (#14) MEAN 4.4 SD 2.73 #11:1 #12:1 #14:1 #16:19 RUNS: 5
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN hexu_genetic (#23) p-value = 0.00902343881808
#17: liuh2_oneShotBelowMeanPool 5 FAULTS (#14) MEAN 1.6 SD 1.2 / 8 FAILURES (#20) MEAN 1.6 SD 1.2 #7:1 #12:1 #14:1 #15:1 #16:4 RUNS: 5
#18: chenk4_2phaseBFS 4 FAULTS (#15) MEAN 1.4 SD 0.49 / 47 FAILURES (#1) MEAN 9.4 SD 15.82 #7:14 #12:2 #15:1 #16:30 RUNS: 5
#19: rayalas_avoidKnownBugs 2 FAULTS (#22) MEAN 1.4 SD 0.49 / 10 FAILURES (#19) MEAN 2.0 SD 1.26 #10:2 #16:8 RUNS: 5
#20: xujing_feedback 3 FAULTS (#19) MEAN 1.0 SD 0.63 / 7 FAILURES (#21) MEAN 1.4 SD 1.02 #8:1 #15:1 #16:5 RUNS: 5
#21: panju_sparseBFS 1 FAULTS (#23) MEAN 1.0 SD 0.0 / 36 FAILURES (#6) MEAN 7.2 SD 5.78 #16:36 RUNS: 5
#22: chenzeh_BFSmutation 3 FAULTS (#20) MEAN 1.0 SD 0.63 / 5 FAILURES (#22) MEAN 1.0 SD 0.63 #5:1 #15:1 #16:3 RUNS: 5
#23: hexu_genetic 2 FAULTS (#21) MEAN 0.8 SD 0.4 / 4 FAILURES (#23) MEAN 0.8 SD 0.4 #10:1 #16:3 RUNS: 5
**********************************************************************
KENDALL TAU CORRELATIONS:
TOTAL FAULTS VS. TOTAL BRANCHES
KendalltauResult(correlation=0.51478167998060742, pvalue=0.00058237752046940436)
TOTAL FAULTS VS. TOTAL FAILURES
KendalltauResult(correlation=0.44481144293910724, pvalue=0.0029571133645159438)
TOTAL FAULTS VS. MEAN FAULTS
KendalltauResult(correlation=0.82936819752482716, pvalue=2.9953210426081188e-08)
TOTAL FAULTS VS. MEAN FAILURES
KendalltauResult(correlation=0.44481144293910724, pvalue=0.0029571133645159438)
TOTAL FAULTS VS. MEAN BRANCHES
KendalltauResult(correlation=0.59917211932169068, pvalue=6.239230274631449e-05)
TOTAL BRANCHES VS. MEAN BRANCHES
KendalltauResult(correlation=0.60474308300395252, pvalue=5.3269237281729788e-05)
MEAN FAULTS VS. MEAN BRANCHES
KendalltauResult(correlation=0.73535197740937408, pvalue=8.9461014388726747e-07)
MEAN FAULTS VS. MEAN FAILURES
KendalltauResult(correlation=0.51303915254631682, pvalue=0.00060793741384611126)
MEAN FAILURES VS. MEAN BRANCHES
KendalltauResult(correlation=0.496035651593635, pvalue=0.00091829025928485486)
TOTAL FAILURES VS. TOTAL BRANCHES
KendalltauResult(correlation=0.3611139543601663, pvalue=0.015825832178673217)
TOTAL FAILURES VS. MEAN BRANCHES
KendalltauResult(correlation=0.496035651593635, pvalue=0.00091829025928485486)
