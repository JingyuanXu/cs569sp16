MEAN BRANCH COVERGE OVER 22 RUNS
#1: SWARM BRANCHES MEAN 12350.05 SD 3069.96 / 22158 TOTAL BRANCHES (#1) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenk4(2phaseBFS) (#15) p-value = 0.012842819655
#2: COVERTESTER1 BRANCHES MEAN 12151.0 SD 2053.46 / 20709 TOTAL BRANCHES (#4) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenk4(2phaseBFS) (#15) p-value = 0.041139779041
#3: PURERANDOM5 BRANCHES MEAN 12126.09 SD 1904.47 / 20072 TOTAL BRANCHES (#14) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER3 (#21) p-value = 0.00172678648453
#4: PURERANDOM12 BRANCHES MEAN 12109.32 SD 2486.35 / 20295 TOTAL BRANCHES (#7) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN liuh2(oneShotBelowMeanPool) (#19) p-value = 0.0326786804878
#5: PURERANDOM2 BRANCHES MEAN 12109.32 SD 2486.35 / 20295 TOTAL BRANCHES (#8) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN liuh2(oneShotBelowMeanPool) (#19) p-value = 0.0326786804878
#6: PURERANDOM1 BRANCHES MEAN 11941.68 SD 2119.89 / 20705 TOTAL BRANCHES (#5) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER3 (#21) p-value = 0.00287286703625
#7: PURERANDOM3 BRANCHES MEAN 11913.14 SD 2365.67 / 20095 TOTAL BRANCHES (#13) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER3 (#21) p-value = 0.00694746434906
#8: PURERANDOM4 BRANCHES MEAN 11762.77 SD 1950.49 / 20291 TOTAL BRANCHES (#9) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER3 (#21) p-value = 0.0177527418444
#9: kaneokak(feedback) BRANCHES MEAN 11670.36 SD 2240.9 / 20740 TOTAL BRANCHES (#3) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER3 (#21) p-value = 0.036701985452
#10: nelsonni(genetic) BRANCHES MEAN 11536.27 SD 1822.07 / 19442 TOTAL BRANCHES (#18) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER3 (#21) p-value = 0.0227954978611
#11: tangz(ARTpartition) BRANCHES MEAN 11501.32 SD 2627.7 / 20834 TOTAL BRANCHES (#2) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.015619784399
#12: hoangmin(genetic) BRANCHES MEAN 11306.36 SD 2165.2 / 20115 TOTAL BRANCHES (#12) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.00982327450752
#13: zhengxu(poolBased) BRANCHES MEAN 11178.05 SD 2255.97 / 19532 TOTAL BRANCHES (#16) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.0120195098587
#14: zhouxuh(feedback) BRANCHES MEAN 11144.73 SD 2910.9 / 20129 TOTAL BRANCHES (#11) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER3 (#21) p-value = 0.0045086983649
#15: chenk4(2phaseBFS) BRANCHES MEAN 11130.59 SD 1480.48 / 19556 TOTAL BRANCHES (#15) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.00917505779479
#16: rayalas(avoidKnownBugs) BRANCHES MEAN 11088.95 SD 1787.8 / 18983 TOTAL BRANCHES (#21) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.0112433316909
#17: alghamha(PROP) BRANCHES MEAN 11061.59 SD 2804.36 / 20206 TOTAL BRANCHES (#10) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.0290391793405
#18: hexu(genetic) BRANCHES MEAN 11047.05 SD 2464.91 / 19449 TOTAL BRANCHES (#17) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.0242356953507
#19: liuh2(oneShotBelowMeanPool) BRANCHES MEAN 10888.41 SD 1854.05 / 18924 TOTAL BRANCHES (#22) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.0146404449585
#20: zhouzh(genetic) BRANCHES MEAN 10792.86 SD 2337.52 / 18804 TOTAL BRANCHES (#23) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.0308128215024
#21: COVERTESTER3 BRANCHES MEAN 10700.95 SD 741.87 / 19120 TOTAL BRANCHES (#20) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.0399897467179
#22: zhangh7(MRTBFS) BRANCHES MEAN 10696.82 SD 1923.0 / 19194 TOTAL BRANCHES (#19) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#26) p-value = 0.0346404697942
#23: wutso(coverTesterBalanceActs) BRANCHES MEAN 10499.09 SD 1737.15 / 18121 TOTAL BRANCHES (#30) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN xujing(feedback) (#31) p-value = 0.0242356953507
#24: COVERTESTER4 BRANCHES MEAN 10284.05 SD 1745.32 / 18201 TOTAL BRANCHES (#28) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN panju(sparseBFS) (#32) p-value = 0.0423177067504
#25: alizades(mutatenewcover) BRANCHES MEAN 10178.95 SD 3960.96 / 20463 TOTAL BRANCHES (#6) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#33) p-value = 0.0105119900649
#26: COVERTESTER2 BRANCHES MEAN 9933.73 SD 1265.32 / 18153 TOTAL BRANCHES (#29) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN panju(sparseBFS) (#32) p-value = 0.036701985452
#27: COVERTESTER5 BRANCHES MEAN 9906.64 SD 2344.09 / 18615 TOTAL BRANCHES (#25) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#33) p-value = 0.0137156420348
#28: chenzeh(BFSmutation) BRANCHES MEAN 9847.64 SD 1967.99 / 18591 TOTAL BRANCHES (#26) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#33) p-value = 0.0105119900649
#29: pengxin(coverTesterOnlyNew) BRANCHES MEAN 9802.64 SD 2334.66 / 18360 TOTAL BRANCHES (#27) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#33) p-value = 0.0166563052102
#30: COVERTESTER6 BRANCHES MEAN 9575.82 SD 1997.24 / 18740 TOTAL BRANCHES (#24) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#33) p-value = 0.0137156420348
#31: xujing(feedback) BRANCHES MEAN 9533.73 SD 1380.37 / 17937 TOTAL BRANCHES (#31) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#33) p-value = 0.0137156420348
#32: panju(sparseBFS) BRANCHES MEAN 9311.59 SD 1082.15 / 16993 TOTAL BRANCHES (#32) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#33) p-value = 0.0235060257189
#33: BFS BRANCHES MEAN 8304.68 SD 1626.5 / 16727 TOTAL BRANCHES (#33) 22 EXPERIMENTS
  RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN PURERANDOM6 (#34) p-value = 0.0137156420348
#34: PURERANDOM6 BRANCHES MEAN 7135.95 SD 1600.44 / 11439 TOTAL BRANCHES (#34) 22 EXPERIMENTS
**********************************************************************
==================================================
FAULT #1: (<type 'exceptions.RuntimeError'>, RuntimeError('maximum recursion depth exceeded',), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['PURERANDOM4']
==================================================
FAULT #2: (<type 'exceptions.ValueError'>, ValueError('cannot convert 0 to int',), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['zhouxuh(feedback)']
==================================================
FAULT #3: (<type 'exceptions.ValueError'>, ValueError('negative shift count',), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['zhouxuh(feedback)']
==================================================
FAULT #4: (<type 'exceptions.TypeError'>, TypeError("'cos' object is not callable",), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['tangz(ARTpartition)']
==================================================
FAULT #5: (<type 'exceptions.TypeError'>, TypeError("'factorial' object is not callable",), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['zhangh7(MRTBFS)']
==================================================
FAULT #6: (<class 'sympy.core.facts.InconsistentAssumptions'>, InconsistentAssumptions({'even': False, 'prime': False, 'real': True, 'commutative': True, 'nonzero': True, 'nonpositive': True, 'composite': False, 'positive': False, 'noninteger': True, 'negative': True, 'nonnegative': False, 'zero': False, 'complex': True, 'rational': False, 'infinite': None, 'integer': False, 'hermitian': True, 'finite': None, 'odd': False, 'imaginary': False, 'irrational': True}, 'negative', False), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['PURERANDOM3']
==================================================
FAULT #7: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for //: 'Sum' and 'int'",), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['pengxin(coverTesterOnlyNew)']
==================================================
FAULT #8: (<type 'exceptions.TypeError'>, TypeError("'asin' object is not callable",), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['zhangh7(MRTBFS)']
==================================================
FAULT #9: (<type 'exceptions.MemoryError'>, MemoryError(), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['SWARM']
==================================================
FAULT #10: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('long division or modulo by zero',), 
FOUND 1 TIMES
FOUND BY 1 STUDENTS ['COVERTESTER1']
==================================================
FAULT #11: (<type 'exceptions.RuntimeError'>, RuntimeError('maximum recursion depth exceeded while calling a Python object',), 
FOUND 5 TIMES
FOUND BY 5 STUDENTS ['wutso(coverTesterBalanceActs)', 'PURERANDOM1', 'chenk4(2phaseBFS)', 'PURERANDOM5', 'kaneokak(feedback)']
==================================================
FAULT #12: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError(), 
FOUND 7 TIMES
FOUND BY 5 STUDENTS ['COVERTESTER1', 'COVERTESTER2', 'alizades(mutatenewcover)', 'PURERANDOM4', 'PURERANDOM5']
==================================================
FAULT #13: (<type 'exceptions.ValueError'>, ValueError('got complex zero with unknown accuracy',), 
FOUND 9 TIMES
FOUND BY 8 STUDENTS ['PURERANDOM2', 'PURERANDOM3', 'PURERANDOM1', 'PURERANDOM4', 'PURERANDOM5', 'liuh2(oneShotBelowMeanPool)', 'chenk4(2phaseBFS)', 'hoangmin(genetic)']
==================================================
FAULT #14: (<type 'exceptions.TypeError'>, TypeError("'mpf' object is not iterable",), 
FOUND 14 TIMES
FOUND BY 8 STUDENTS ['hexu(genetic)', 'PURERANDOM2', 'kaneokak(feedback)', 'PURERANDOM4', 'pengxin(coverTesterOnlyNew)', 'SWARM', 'zhouxuh(feedback)', 'alizades(mutatenewcover)']
==================================================
FAULT #15: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('integer division or modulo by zero',), 
FOUND 45 TIMES
FOUND BY 12 STUDENTS ['COVERTESTER1', 'COVERTESTER2', 'COVERTESTER5', 'kaneokak(feedback)', 'SWARM', 'liuh2(oneShotBelowMeanPool)', 'alghamha(PROP)', 'xujing(feedback)', 'alizades(mutatenewcover)', 'tangz(ARTpartition)', 'hoangmin(genetic)', 'wutso(coverTesterBalanceActs)']
==================================================
FAULT #16: (<type 'exceptions.TypeError'>, TypeError("'exp' object is not callable",), 
FOUND 15 TIMES
FOUND BY 13 STUDENTS ['panju(sparseBFS)', 'zhangh7(MRTBFS)', 'PURERANDOM2', 'COVERTESTER1', 'PURERANDOM1', 'COVERTESTER6', 'SWARM', 'PURERANDOM3', 'alghamha(PROP)', 'alizades(mutatenewcover)', 'tangz(ARTpartition)', 'hoangmin(genetic)', 'wutso(coverTesterBalanceActs)']
==================================================
FAULT #17: (<type 'exceptions.ValueError'>, ValueError('gamma function pole',), 
FOUND 23 TIMES
FOUND BY 13 STUDENTS ['PURERANDOM1', 'PURERANDOM2', 'COVERTESTER1', 'COVERTESTER3', 'PURERANDOM4', 'PURERANDOM5', 'PURERANDOM3', 'liuh2(oneShotBelowMeanPool)', 'chenk4(2phaseBFS)', 'alghamha(PROP)', 'zhouxuh(feedback)', 'alizades(mutatenewcover)', 'hoangmin(genetic)']
==================================================
FAULT #18: (<type 'exceptions.TypeError'>, TypeError('Invalid comparison 
FOUND 27 TIMES
FOUND BY 18 STUDENTS ['PURERANDOM1', 'PURERANDOM2', 'COVERTESTER1', 'COVERTESTER2', 'COVERTESTER3', 'kaneokak(feedback)', 'COVERTESTER6', 'pengxin(coverTesterOnlyNew)', 'SWARM', 'PURERANDOM3', 'liuh2(oneShotBelowMeanPool)', 'PURERANDOM4', 'PURERANDOM5', 'alghamha(PROP)', 'xujing(feedback)', 'alizades(mutatenewcover)', 'tangz(ARTpartition)', 'wutso(coverTesterBalanceActs)']
==================================================
FAULT #19: (<type 'exceptions.AssertionError'>, AssertionError(), 
FOUND 44 TIMES
FOUND BY 21 STUDENTS ['PURERANDOM1', 'hexu(genetic)', 'zhengxu(poolBased)', 'PURERANDOM3', 'PURERANDOM2', 'COVERTESTER1', 'COVERTESTER2', 'COVERTESTER3', 'COVERTESTER4', 'PURERANDOM4', 'pengxin(coverTesterOnlyNew)', 'zhouzh(genetic)', 'zhangh7(MRTBFS)', 'nelsonni(genetic)', 'liuh2(oneShotBelowMeanPool)', 'alghamha(PROP)', 'zhouxuh(feedback)', 'alizades(mutatenewcover)', 'tangz(ARTpartition)', 'hoangmin(genetic)', 'wutso(coverTesterBalanceActs)']
==================================================
FAULT #20: (<type 'exceptions.ValueError'>, ValueError('Invalid limits 
FOUND 56 TIMES
FOUND BY 22 STUDENTS ['zhouzh(genetic)', 'COVERTESTER1', 'COVERTESTER3', 'SWARM', 'alghamha(PROP)', 'alizades(mutatenewcover)', 'tangz(ARTpartition)', 'xujing(feedback)', 'chenk4(2phaseBFS)', 'pengxin(coverTesterOnlyNew)', 'chenzeh(BFSmutation)', 'zhangh7(MRTBFS)', 'liuh2(oneShotBelowMeanPool)', 'hoangmin(genetic)', 'wutso(coverTesterBalanceActs)', 'BFS', 'PURERANDOM2', 'PURERANDOM3', 'PURERANDOM1', 'kaneokak(feedback)', 'PURERANDOM4', 'PURERANDOM5']
==================================================
FAULT #21: (<type 'exceptions.AttributeError'>, AttributeError("'NaN' object has no attribute '_mpf_'",), 
FOUND 98 TIMES
FOUND BY 27 STUDENTS ['nelsonni(genetic)', 'zhouzh(genetic)', 'COVERTESTER1', 'COVERTESTER2', 'COVERTESTER3', 'COVERTESTER4', 'SWARM', 'alghamha(PROP)', 'alizades(mutatenewcover)', 'tangz(ARTpartition)', 'xujing(feedback)', 'chenk4(2phaseBFS)', 'zhengxu(poolBased)', 'pengxin(coverTesterOnlyNew)', 'chenzeh(BFSmutation)', 'zhangh7(MRTBFS)', 'liuh2(oneShotBelowMeanPool)', 'hoangmin(genetic)', 'PURERANDOM2', 'PURERANDOM3', 'PURERANDOM1', 'kaneokak(feedback)', 'PURERANDOM4', 'PURERANDOM5', 'rayalas(avoidKnownBugs)', 'zhouxuh(feedback)', 'hexu(genetic)']
==================================================
FAULT #22: (<type 'exceptions.TypeError'>, TypeError('Invalid NaN comparison',), 
FOUND 75 TIMES
FOUND BY 28 STUDENTS ['nelsonni(genetic)', 'zhouzh(genetic)', 'panju(sparseBFS)', 'COVERTESTER1', 'COVERTESTER2', 'COVERTESTER3', 'COVERTESTER4', 'COVERTESTER5', 'SWARM', 'alghamha(PROP)', 'alizades(mutatenewcover)', 'xujing(feedback)', 'chenk4(2phaseBFS)', 'zhengxu(poolBased)', 'chenzeh(BFSmutation)', 'liuh2(oneShotBelowMeanPool)', 'hoangmin(genetic)', 'wutso(coverTesterBalanceActs)', 'BFS', 'PURERANDOM2', 'PURERANDOM3', 'PURERANDOM1', 'kaneokak(feedback)', 'PURERANDOM4', 'PURERANDOM5', 'rayalas(avoidKnownBugs)', 'zhouxuh(feedback)', 'hexu(genetic)']
==================================================
FAULT #23: (<class 'sympy.polys.polyerrors.NotAlgebraic'>, 
FOUND 51 TIMES
FOUND BY 28 STUDENTS ['nelsonni(genetic)', 'zhouzh(genetic)', 'panju(sparseBFS)', 'COVERTESTER1', 'COVERTESTER2', 'COVERTESTER3', 'COVERTESTER4', 'COVERTESTER5', 'SWARM', 'alghamha(PROP)', 'alizades(mutatenewcover)', 'tangz(ARTpartition)', 'chenk4(2phaseBFS)', 'zhengxu(poolBased)', 'pengxin(coverTesterOnlyNew)', 'zhangh7(MRTBFS)', 'liuh2(oneShotBelowMeanPool)', 'hoangmin(genetic)', 'wutso(coverTesterBalanceActs)', 'PURERANDOM2', 'PURERANDOM3', 'PURERANDOM1', 'kaneokak(feedback)', 'PURERANDOM4', 'PURERANDOM5', 'rayalas(avoidKnownBugs)', 'zhouxuh(feedback)', 'hexu(genetic)']
==================================================
FAULT #24: (<type 'exceptions.RuntimeError'>, RuntimeError('maximum recursion depth exceeded in cmp',), 
FOUND 950 TIMES
FOUND BY 32 STUDENTS ['nelsonni(genetic)', 'zhouzh(genetic)', 'panju(sparseBFS)', 'COVERTESTER1', 'COVERTESTER2', 'COVERTESTER3', 'COVERTESTER4', 'COVERTESTER5', 'COVERTESTER6', 'SWARM', 'alghamha(PROP)', 'alizades(mutatenewcover)', 'tangz(ARTpartition)', 'xujing(feedback)', 'chenk4(2phaseBFS)', 'zhengxu(poolBased)', 'pengxin(coverTesterOnlyNew)', 'chenzeh(BFSmutation)', 'zhangh7(MRTBFS)', 'liuh2(oneShotBelowMeanPool)', 'hoangmin(genetic)', 'wutso(coverTesterBalanceActs)', 'BFS', 'PURERANDOM2', 'PURERANDOM3', 'PURERANDOM1', 'kaneokak(feedback)', 'PURERANDOM4', 'PURERANDOM5', 'rayalas(avoidKnownBugs)', 'zhouxuh(feedback)', 'hexu(genetic)']
**********************************************************************
#1: PURERANDOM4 12 FAULTS (#3) MEAN 1.86 SD 1.58 / 73 FAILURES (#3) MEAN 3.32 SD 3.71 #1:1 #12:3 #13:2 #14:3 #17:1 #18:2 #19:9 #20:5 #21:8 #22:3 #23:1 #24:35
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.0235060257189
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.00276467193454
#2: COVERTESTER1 12 FAULTS (#1) MEAN 1.82 SD 0.89 / 59 FAILURES (#9) MEAN 2.68 SD 1.92 #10:1 #12:1 #15:1 #16:1 #17:4 #18:1 #19:5 #20:3 #21:5 #22:2 #23:2 #24:33
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN alghamha(PROP) (#14) p-value = 0.0336473485088
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.000934159308781
#3: SWARM 10 FAULTS (#7) MEAN 1.73 SD 1.17 / 67 FAILURES (#5) MEAN 3.05 SD 2.27 #9:1 #14:3 #15:4 #16:1 #18:2 #20:11 #21:4 #22:1 #23:3 #24:37
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.0281858021479
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.0024620350686
#4: PURERANDOM2 11 FAULTS (#4) MEAN 1.64 SD 1.15 / 71 FAILURES (#4) MEAN 3.23 SD 2.86 #13:1 #14:1 #16:1 #17:3 #18:2 #19:2 #20:3 #21:3 #22:2 #23:2 #24:51
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN nelsonni(genetic) (#19) p-value = 0.0460239886828
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.0032210539792
#5: alizades(mutatenewcover) 12 FAULTS (#2) MEAN 1.55 SD 1.41 / 57 FAILURES (#10) MEAN 2.59 SD 3.1 #12:1 #14:1 #15:3 #16:1 #17:1 #18:1 #19:2 #20:3 #21:4 #22:1 #23:2 #24:37
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER4 (#28) p-value = 0.0460239886828
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER5 (#27) p-value = 0.0356585214118
#6: zhouxuh(feedback) 9 FAULTS (#15) MEAN 1.5 SD 1.08 / 56 FAILURES (#12) MEAN 2.55 SD 1.75 #2:1 #3:1 #14:3 #17:1 #19:3 #21:4 #22:1 #23:3 #24:39
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN xujing(feedback) (#22) p-value = 0.0486437936801
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.00255936944061
#7: PURERANDOM3 11 FAULTS (#5) MEAN 1.41 SD 0.94 / 62 FAILURES (#7) MEAN 2.82 SD 2.74 #6:1 #13:1 #16:1 #17:3 #18:1 #19:2 #20:1 #21:3 #22:2 #23:2 #24:45
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN zhengxu(poolBased) (#23) p-value = 0.0435240403102
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.00827421565072
#8: PURERANDOM1 11 FAULTS (#6) MEAN 1.36 SD 0.77 / 55 FAILURES (#13) MEAN 2.5 SD 1.8 #11:1 #13:1 #16:1 #17:2 #18:1 #19:1 #20:1 #21:3 #22:3 #23:1 #24:40
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN zhengxu(poolBased) (#23) p-value = 0.0308128215024
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.0024620350686
#9: tangz(ARTpartition) 9 FAULTS (#12) MEAN 1.32 SD 1.18 / 64 FAILURES (#6) MEAN 2.91 SD 3.07 #4:1 #15:2 #16:1 #18:4 #19:1 #20:1 #21:1 #23:3 #24:50
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN panju(sparseBFS) (#29) p-value = 0.0183243077515
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.0356585214118
#10: hoangmin(genetic) 10 FAULTS (#10) MEAN 1.32 SD 0.97 / 60 FAILURES (#8) MEAN 2.73 SD 2.51 #13:1 #15:5 #16:1 #17:2 #19:2 #20:1 #21:3 #22:2 #23:2 #24:41
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN rayalas(avoidKnownBugs) (#26) p-value = 0.0460239886828
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.00771847233762
#11: PURERANDOM5 10 FAULTS (#11) MEAN 1.32 SD 0.82 / 56 FAILURES (#11) MEAN 2.55 SD 2.55 #11:1 #12:1 #13:1 #17:2 #18:1 #20:4 #21:1 #22:2 #23:2 #24:41
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN zhouzh(genetic) (#25) p-value = 0.041139779041
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.0137156420348
#12: kaneokak(feedback) 9 FAULTS (#14) MEAN 1.27 SD 1.05 / 55 FAILURES (#14) MEAN 2.5 SD 2.44 #11:1 #14:1 #15:1 #18:3 #20:1 #21:1 #22:2 #23:3 #24:42
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER4 (#28) p-value = 0.0460239886828
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.0346404697942
#13: zhangh7(MRTBFS) 8 FAULTS (#20) MEAN 1.23 SD 0.95 / 111 FAILURES (#2) MEAN 5.05 SD 4.7 #5:1 #8:1 #16:3 #19:2 #20:1 #21:1 #23:1 #24:101
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN panju(sparseBFS) (#29) p-value = 0.0137156420348
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN alghamha(PROP) (#14) p-value = 0.0473186459345
#14: alghamha(PROP) 10 FAULTS (#8) MEAN 1.18 SD 1.3 / 53 FAILURES (#15) MEAN 2.41 SD 3.14 #15:3 #16:1 #17:1 #18:1 #19:1 #20:2 #21:4 #22:1 #23:2 #24:37
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.0132728895761
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh(BFSmutation) (#31) p-value = 0.0423177067504
#15: chenk4(2phaseBFS) 8 FAULTS (#18) MEAN 1.14 SD 0.97 / 130 FAILURES (#1) MEAN 5.91 SD 8.1 #11:1 #13:1 #17:1 #20:1 #21:22 #22:22 #23:6 #24:76
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN panju(sparseBFS) (#29) p-value = 0.0356585214118
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER2 (#17) p-value = 0.041139779041
#16: wutso(coverTesterBalanceActs) 9 FAULTS (#13) MEAN 1.09 SD 0.73 / 41 FAILURES (#17) MEAN 1.86 SD 1.6 #11:1 #15:1 #16:1 #18:1 #19:1 #20:2 #22:2 #23:1 #24:31
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN panju(sparseBFS) (#29) p-value = 0.0151231344031
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER5 (#27) p-value = 0.0356585214118
#17: COVERTESTER2 8 FAULTS (#16) MEAN 0.95 SD 0.82 / 21 FAILURES (#26) MEAN 0.95 SD 0.82 #12:1 #15:1 #18:1 #19:3 #21:2 #22:2 #23:2 #24:9
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.00403520126339
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.00403520126339
#18: liuh2(oneShotBelowMeanPool) 10 FAULTS (#9) MEAN 0.95 SD 0.77 / 33 FAILURES (#18) MEAN 1.5 SD 1.37 #13:1 #15:1 #17:1 #18:1 #19:1 #20:1 #21:2 #22:2 #23:1 #24:22
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh(BFSmutation) (#31) p-value = 0.0377713489514
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN COVERTESTER6 (#30) p-value = 0.0308128215024
#19: nelsonni(genetic) 5 FAULTS (#24) MEAN 0.91 SD 0.67 / 27 FAILURES (#19) MEAN 1.23 SD 1.04 #19:1 #21:2 #22:3 #23:1 #24:20
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh(BFSmutation) (#31) p-value = 0.041139779041
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh(BFSmutation) (#31) p-value = 0.0201367515503
#20: COVERTESTER3 8 FAULTS (#17) MEAN 0.91 SD 0.6 / 25 FAILURES (#21) MEAN 1.14 SD 0.97 #17:1 #18:1 #19:2 #20:1 #21:2 #22:2 #23:2 #24:14
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN panju(sparseBFS) (#29) p-value = 0.0499999631908
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh(BFSmutation) (#31) p-value = 0.0177527418444
#21: pengxin(coverTesterOnlyNew) 8 FAULTS (#19) MEAN 0.91 SD 0.79 / 25 FAILURES (#23) MEAN 1.14 SD 1.06 #7:1 #14:1 #18:2 #19:2 #20:2 #21:2 #23:1 #24:14
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.00485175331977
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh(BFSmutation) (#31) p-value = 0.041139779041
#22: xujing(feedback) 6 FAULTS (#22) MEAN 0.82 SD 0.83 / 47 FAILURES (#16) MEAN 2.14 SD 4.38 #15:21 #18:1 #20:5 #21:11 #22:1 #24:8
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.0308128215024
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.0195159425424
#23: zhengxu(poolBased) 5 FAULTS (#26) MEAN 0.82 SD 0.65 / 25 FAILURES (#22) MEAN 1.14 SD 1.06 #19:1 #21:2 #22:4 #23:2 #24:16
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.00581502213618
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh(BFSmutation) (#31) p-value = 0.041139779041
#24: hexu(genetic) 6 FAULTS (#23) MEAN 0.82 SD 0.57 / 22 FAILURES (#25) MEAN 1.0 SD 0.85 #14:1 #19:1 #21:2 #22:4 #23:1 #24:13
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.00310093528777
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN chenzeh(BFSmutation) (#31) p-value = 0.0388671038124
#25: zhouzh(genetic) 6 FAULTS (#21) MEAN 0.77 SD 0.6 / 22 FAILURES (#24) MEAN 1.0 SD 0.95 #19:1 #20:1 #21:2 #22:3 #23:1 #24:14
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.00694746434906
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.00485175331977
#26: rayalas(avoidKnownBugs) 4 FAULTS (#30) MEAN 0.73 SD 0.54 / 21 FAILURES (#27) MEAN 0.95 SD 0.82 #21:2 #22:2 #23:1 #24:16
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.00827421565072
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.00403520126339
#27: COVERTESTER5 4 FAULTS (#28) MEAN 0.68 SD 0.7 / 19 FAILURES (#28) MEAN 0.86 SD 0.92 #15:2 #22:1 #23:1 #24:15
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.0473186459345
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.0308128215024
#28: COVERTESTER4 5 FAULTS (#25) MEAN 0.64 SD 0.48 / 16 FAILURES (#29) MEAN 0.73 SD 0.62 #19:1 #21:1 #22:2 #23:1 #24:11
  FAULTS RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.0201367515503
  FAILURES RANK-SUM STATISTICALLY SIGNIFICANTLY BETTER THAN BFS (#32) p-value = 0.0146404449585
#29: panju(sparseBFS) 4 FAULTS (#27) MEAN 0.5 SD 0.58 / 25 FAILURES (#20) MEAN 1.14 SD 1.79 #16:1 #22:1 #23:1 #24:22
#30: COVERTESTER6 3 FAULTS (#31) MEAN 0.5 SD 0.66 / 14 FAILURES (#30) MEAN 0.64 SD 0.88 #16:1 #18:1 #24:12
#31: chenzeh(BFSmutation) 4 FAULTS (#29) MEAN 0.5 SD 0.84 / 12 FAILURES (#31) MEAN 0.55 SD 0.94 #20:4 #21:1 #22:1 #24:6
#32: BFS 3 FAULTS (#32) MEAN 0.23 SD 0.42 / 5 FAILURES (#32) MEAN 0.23 SD 0.42 #20:2 #22:1 #24:2
**********************************************************************
KENDALL TAU CORRELATIONS:
TOTAL FAULTS VS. TOTAL BRANCHES
KendalltauResult(correlation=0.54338045630278642, pvalue=1.2390280122740853e-05)
TOTAL FAULTS VS. TOTAL FAILURES
KendalltauResult(correlation=0.61302119613117623, pvalue=8.1914302180593768e-07)
TOTAL FAULTS VS. MEAN FAULTS
KendalltauResult(correlation=0.83132317820637469, pvalue=2.2836509664284209e-11)
TOTAL FAULTS VS. MEAN FAILURES
KendalltauResult(correlation=0.61302119613117623, pvalue=8.1914302180593768e-07)
TOTAL FAULTS VS. MEAN BRANCHES
KendalltauResult(correlation=0.51800860620304545, pvalue=3.0927123496731373e-05)
TOTAL BRANCHES VS. MEAN BRANCHES
KendalltauResult(correlation=0.66532258064516103, pvalue=8.7262187207263424e-08)
MEAN FAULTS VS. MEAN BRANCHES
KendalltauResult(correlation=0.59862274866401421, pvalue=1.4724516217778488e-06)
MEAN FAULTS VS. MEAN FAILURES
KendalltauResult(correlation=0.73065365648768466, pvalue=4.1799332391525895e-09)
MEAN FAILURES VS. MEAN BRANCHES
KendalltauResult(correlation=0.48475018576502887, pvalue=9.6582592490575609e-05)
TOTAL FAILURES VS. TOTAL BRANCHES
KendalltauResult(correlation=0.49697077868347495, pvalue=6.4064983789729817e-05)
TOTAL FAILURES VS. MEAN BRANCHES
KendalltauResult(correlation=0.48475018576502887, pvalue=9.6582592490575609e-05)
